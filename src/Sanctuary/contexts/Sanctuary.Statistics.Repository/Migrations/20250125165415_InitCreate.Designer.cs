// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sanctuary.Statistics.Repository.Context;

#nullable disable

namespace Sanctuary.Statistics.Repository.Migrations
{
    [DbContext(typeof(StatisticsContext))]
    [Migration("20250125165415_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticalResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GraphData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatisticsJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsJobId");

                    b.ToTable("StatisticalResults", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Started")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StatisticsJobTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsJobTypeId");

                    b.ToTable("Jobs", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobDataFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataFileMapJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatisticsJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsJobId");

                    b.ToTable("JobDataFiles", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobEndpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndpointMapJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatisticsJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsJobId");

                    b.ToTable("JobEndpoints", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobPatient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PatientIdentifer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatisticsJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsJobId");

                    b.ToTable("JobPatients", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTypes", "Statistics");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticalResult", b =>
                {
                    b.HasOne("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", "StatisticsJob")
                        .WithMany()
                        .HasForeignKey("StatisticsJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticsJob");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", b =>
                {
                    b.HasOne("Sanctuary.Statistics.Repository.Datasets.StatisticsJobType", "StatisticsJobType")
                        .WithMany()
                        .HasForeignKey("StatisticsJobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticsJobType");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobDataFile", b =>
                {
                    b.HasOne("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", "StatisticsJob")
                        .WithMany("StatisticsJobDataFiles")
                        .HasForeignKey("StatisticsJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticsJob");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobEndpoint", b =>
                {
                    b.HasOne("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", "StatisticsJob")
                        .WithMany("StatisticsJobEndpoints")
                        .HasForeignKey("StatisticsJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticsJob");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJobPatient", b =>
                {
                    b.HasOne("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", "StatisticsJob")
                        .WithMany("StatisticsJobPatients")
                        .HasForeignKey("StatisticsJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticsJob");
                });

            modelBuilder.Entity("Sanctuary.Statistics.Repository.Datasets.StatisticsJob", b =>
                {
                    b.Navigation("StatisticsJobDataFiles");

                    b.Navigation("StatisticsJobEndpoints");

                    b.Navigation("StatisticsJobPatients");
                });
#pragma warning restore 612, 618
        }
    }
}
